#Population 1 
#25% of each class

library(tessera)
library(dplyr)

# Function to create a test mixed population
create_test_mixed_population <- function(total_population_size = 11861,
                                         prop_euploid = 0,
                                         prop_aneuploid_100 = 0,
                                         prop_aneuploid_80 = 0,
                                         prop_aneuploid_30 = 0,
                                         dispersal = 0.5) {
  # Calculate the number of embryos per type based on proportions
  embryos_per_type <- c(
    euploid = total_population_size * prop_euploid,
    aneuploid_100 = total_population_size * prop_aneuploid_100,
    aneuploid_80 = total_population_size * prop_aneuploid_80,
    aneuploid_30 = total_population_size * prop_aneuploid_30
  )
  
  # Create data frame with different embryo types
  data.frame(
    n.cells = rep(200, total_population_size),
    n.chrs = rep(1, total_population_size),
    total_population_size = rep(total_population_size, total_population_size),
    prop.aneuploid = c(
      rep(1.00, embryos_per_type["aneuploid_100"]),
      rep(0.80, embryos_per_type["aneuploid_80"]),
      rep(0.30, embryos_per_type["aneuploid_30"]),
      rep(0.00, embryos_per_type["euploid"])
    ),
    dispersal = rep(dispersal, total_population_size),
    simulation_id = 1:total_population_size
  )
}

# Function to generate embryos with progress updates
make.embryos <- function(pops) {
  embryos_list <- list()
  
  for (i in 1:nrow(pops)) {
    pop <- pops[i, ]
    
    # Print progress for generating embryos
    cat("Generating embryo", pop$simulation_id, "of", nrow(pops), "for population 1\n")
    
    embryos <- tessera::Embryo(
      n.cells = pop$n.cells,
      n.chrs = pop$n.chrs,
      prop.aneuploid = pop$prop.aneuploid,
      dispersal = pop$dispersal
    )
    
    embryos_list[[i]] <- embryos
  }
  
  return(embryos_list)
}

# Function to take biopsies from embryos with progress updates
biopsy.embryos <- function(embryos_list, biopsy_size = 5, index_cell = 1, chromosome = 0) {
  biopsies_list <- list()
  
  for (i in 1:length(embryos_list)) {
    # Print progress for taking biopsies
    cat("Taking biopsy for embryo", i, "of", length(embryos_list), "in population 1\n")
    
    embryo <- embryos_list[[i]]
    biopsy <- tessera::takeBiopsy(embryo, biopsy.size = biopsy_size, index.cell = index_cell, chromosome = chromosome)
    biopsies_list[[i]] <- biopsy
  }
  
  return(biopsies_list)
}

# Function to classify biopsies based on the numeric vector structure
classify_biopsies <- function(biopsies_list) {
  classifications <- lapply(biopsies_list, function(pop_biopsies) {
    # Classify each biopsy in the population
    sapply(pop_biopsies, function(biopsy) {
      if (is.numeric(biopsy)) {
        result <- biopsy[1]  # Extract the single numeric value
        if (result == 0) {
          return("euploid")
        } else if (result %in% c(1, 2)) {
          return("mosaic_low")
        } else if (result %in% c(3, 4)) {
          return("mosaic_high")
        } else if (result == 5) {
          return("aneuploid")
        } else {
          return(NA)  # Handle unexpected values
        }
      } else {
        return(NA)  # Handle unexpected biopsy structure
      }
    })
  })
  
  # Flatten the list into a single vector of classifications
  unlist(classifications)
}

# Function to perform chi-squared test
perform_chi_squared_test <- function(classifications, reference_data) {
  observed_counts <- table(classifications)
  expected_counts <- reference_data
  
  # Ensure the observed and expected counts have the same categories
  categories <- union(names(observed_counts), names(expected_counts))
  
  # Fill missing categories with 0
  observed_counts <- as.numeric(observed_counts[categories])
  expected_counts <- as.numeric(expected_counts[categories])
  
  # Perform the chi-squared test
  chisq.test(observed_counts, p = expected_counts / sum(expected_counts))
}

# Example Workflow
# Generate the test population with specific proportions
test_population <- create_test_mixed_population(
  total_population_size = 20,
  prop_euploid = 0.25,
  prop_aneuploid_100 = 0.25,
  prop_aneuploid_80 = 0.25,
  prop_aneuploid_30 = 0.25
)

# Generate embryos for the test population
test_embryos <- make.embryos(test_population)

# Perform biopsies on the generated embryos
test_biopsies <- biopsy.embryos(test_embryos, biopsy_size = 5)

# Classify the biopsies
classified_biopsies <- classify_biopsies(test_biopsies)

# Print classified biopsies for verification
print(classified_biopsies)

# Define reference data for the chi-squared test
reference_data <- c(
  euploid = 6512,
  mosaic_low = 799,
  mosaic_high = 462,
  aneuploid = 4088
)

# Perform chi-squared test
chi_squared_result <- perform_chi_squared_test(classified_biopsies, reference_data)

# Print the chi-squared test result
print(chi_squared_result)
